<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-30T10:42:39Z" name="Surefire suite" finished-at="2022-08-30T10:42:43Z" duration-ms="4305">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:com.TestLauncher.TestFailures@8e0379d]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:com.TestLauncher.TestRunner@341b80b2]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-08-30T10:42:39Z" name="Surefire test" finished-at="2022-08-30T10:42:43Z" duration-ms="4305">
      <class name="com.TestLauncher.TestRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.TestLauncher.TestRunner@341b80b2]" started-at="2022-08-30T16:12:39Z" name="setUpClass" finished-at="2022-08-30T16:12:39Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:com.TestLauncher.TestRunner@341b80b2]" started-at="2022-08-30T16:12:39Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-08-30T16:12:43Z" duration-ms="3553" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["TC_001_IMPS_CIB"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["RBL IMPS Feature File"]]>
              </value>
            </param>
          </params>
          <exception class="com.jayway.restassured.path.json.exception.JsonPathException">
            <message>
              <![CDATA[Failed to parse the JSON document]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.jayway.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
	at com.jayway.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:928)
	at com.jayway.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:893)
	at com.jayway.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:972)
	at com.jayway.restassured.path.json.JsonPath.get(JsonPath.java:201)
	at com.stepDefinition.IMPS.IMPS_Json.i_am_validating_object_for_string_value_For(IMPS_Json.java:252)
	at âœ½.I am validating object "OTPGenerationResponse.ResponseHeader.Security.Token.PasswordToken.UserId" for string value "101220913" For "GenrateOTP".(src/test/java/com/feature/IMPS/FundTransfer_IMPS_Feature.feature:14)
Caused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading 'E', no possible valid JSON value or punctuation could be recognized.
	at groovy.json.JsonLexer.nextToken(JsonLexer.java:87)
	at groovy.json.JsonLexer$nextToken.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:120)
	at com.jayway.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:96)
	at com.jayway.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:157)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
	at com.jayway.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:82)
	at com.jayway.restassured.path.json.JsonPath$4$1.method(JsonPath.java:891)
	at com.jayway.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:926)
	at com.jayway.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:893)
	at com.jayway.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:972)
	at com.jayway.restassured.path.json.JsonPath.get(JsonPath.java:201)
	at com.stepDefinition.IMPS.IMPS_Json.i_am_validating_object_for_string_value_For(IMPS_Json.java:252)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at cucumber.runtime.Utils$1.call(Utils.java:26)
	at cucumber.runtime.Timeout.timeout(Timeout.java:16)
	at cucumber.runtime.Utils.invoke(Utils.java:20)
	at cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:49)
	at cucumber.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:50)
	at cucumber.runner.TestStep.executeStep(TestStep.java:63)
	at cucumber.runner.TestStep.run(TestStep.java:49)
	at cucumber.runner.PickleStepTestStep.run(PickleStepTestStep.java:43)
	at cucumber.runner.TestCase.run(TestCase.java:44)
	at cucumber.runner.Runner.runPickle(Runner.java:40)
	at cucumber.api.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:68)
	at cucumber.api.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:22)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.jayway.restassured.path.json.exception.JsonPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.TestLauncher.TestRunner@341b80b2]" started-at="2022-08-30T16:12:43Z" name="tearDownClass" finished-at="2022-08-30T16:12:43Z" duration-ms="492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.TestLauncher.TestRunner -->
      <class name="com.TestLauncher.TestFailures">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.TestLauncher.TestFailures@8e0379d]" started-at="2022-08-30T16:12:39Z" name="setUpClass" finished-at="2022-08-30T16:12:39Z" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.TestLauncher.TestFailures@8e0379d]" started-at="2022-08-30T16:12:39Z" name="tearDownClass" finished-at="2022-08-30T16:12:39Z" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.TestLauncher.TestFailures -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
